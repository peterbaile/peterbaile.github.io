{"version":3,"sources":["webpack:///./src/pages/work.js"],"names":["Wrapper","s","div","withConfig","displayName","componentId","HeadP","p","LineBreak","br","Bar","text","StyledLink","a","ExpName","Experience","_ref","pos","name","website","img","desc","time","links","React","createElement","className","style","marginBottom","src","width","fontSize","fontWeight","href","color","Boolean","length","map","e","Object","keys","k","Fragment","Work","SEO","title","Nav","WorkJSON","margin"],"mappings":"8qEAAA,gFAQA,MAAMA,EAAUC,IAAEC,IAAGC,WAAA,CAAAC,YAAA,gBAAAC,YAAA,eAALJ,CAAK,wGAUfK,EAAQL,IAAEM,EAACJ,WAAA,CAAAC,YAAA,cAAAC,YAAA,eAAHJ,CAAG,kGASXO,EAAYP,IAAEQ,GAAEN,WAAA,CAAAC,YAAA,kBAAAC,YAAA,eAAJJ,CAAI,sEAQhBS,EAAMT,IAAEU,KAAIR,WAAA,CAAAC,YAAA,YAAAC,YAAA,eAANJ,CAAM,wDAMZW,EAAaX,IAAEY,EAACV,WAAA,CAAAC,YAAA,mBAAAC,YAAA,eAAHJ,CAAG,+DAKhBa,EAAUb,IAAEU,KAAIR,WAAA,CAAAC,YAAA,gBAAAC,YAAA,eAANJ,CAAM,2EAUhBc,EAAaC,IAAA,IAAC,IAAEC,EAAG,KAAEC,EAAI,QAAEC,EAAO,IAAEC,EAAG,KAAEC,EAAI,KAAEC,EAAI,MAAEC,GAAOP,EAAA,OAChEQ,IAAAC,cAAA,OAAKC,UAAU,MAAMC,MAAO,CAAEC,aAAc,WAC1CJ,IAAAC,cAAA,OAAKC,UAAU,YACbF,IAAAC,cAAA,OAAKI,IAAG,WAAaT,EAAOM,UAAU,YAAYI,MAAM,UAE1DN,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAACnB,EAAK,KACJkB,IAAAC,cAAA,QAAME,MAAO,CAAEI,SAAU,SAAUC,WAAY,QAC5Cf,EAAI,IACLO,IAAAC,cAACb,EAAU,CAACqB,KAAMd,GAChBK,IAAAC,cAACX,EAAO,KAAC,IAAEI,EAAK,MAElBM,IAAAC,cAACf,EAAG,KAAC,MACA,IAEPc,IAAAC,cAACjB,EAAS,MACVgB,IAAAC,cAAA,QAAME,MAAO,CAAEO,MAAO,UAAWH,SAAU,QAAUT,IAEtDa,QAAQd,EAAKe,SACZZ,IAAAC,cAAA,UACGJ,EAAKgB,IAAIC,GACRd,IAAAC,cAAA,MAAIE,MAAO,CAAEK,WAAY,QAAS,IAAEM,EAAE,MAEvCf,GACCgB,OAAOC,KAAKjB,GAAOc,IAAII,GAAKjB,IAAAC,cAAAD,IAAAkB,SAAA,KAAElB,IAAAC,cAAA,KAAGQ,KAAI,GAAKV,EAAMkB,IAAM,MAAIA,EAAE,OAAO,WAsChEE,UA/BFA,IACXnB,IAAAC,cAAAD,IAAAkB,SAAA,KACElB,IAAAC,cAACmB,IAAG,CAACC,MAAM,SACXrB,IAAAC,cAAA,OAAKC,UAAU,yBACbF,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAACqB,IAAG,MAEJtB,IAAAC,cAACzB,EAAO,CAAC0B,UAAU,yBAChBa,OAAOC,KAAKO,GAAUV,IAAII,GACzBjB,IAAAC,cAAAD,IAAAkB,SAAA,KACElB,IAAAC,cAAA,KACEE,MAAO,CACLI,SAAU,OACVC,WAAY,MACZJ,aAAc,WAGfa,GAEFM,EAASN,GAAGJ,IAAIC,GACfd,IAAAC,cAACV,EAAeuB,IAElBd,IAAAC,cAAA,OAAKE,MAAO,CAAEqB,OAAQ","file":"component---src-pages-work-js-e116cb49c7d2434dde4d.js","sourcesContent":["import React from 'react'\r\nimport s from 'styled-components'\r\n\r\nimport Nav from '../components/Nav'\r\nimport SEO from '../components/seo'\r\n\r\nimport WorkJSON from '../json/work.json'\r\n\r\nconst Wrapper = s.div`\r\n  margin-top: 4em;\r\n  padding: 0em 5rem;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    padding: 0 2em;\r\n    margin-top: 2em;\r\n  }\r\n`\r\n\r\nconst HeadP = s.p`\r\n  margin-bottom: 0;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    margin-top: 0.8rem;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n`\r\n\r\nconst LineBreak = s.br`\r\n  display: none;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst Bar = s.text`\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst StyledLink = s.a`\r\n  color: #000000 !important;\r\n  text-decoration: none !important;\r\n`\r\n\r\nconst ExpName = s.text`\r\n  transition: 0.3s;\r\n\r\n  :hover {\r\n    color: #B5B4B4;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n  }\r\n`\r\n\r\nconst Experience = ({ pos, name, website, img, desc, time, links }) => (\r\n  <div className=\"row\" style={{ marginBottom: '1.5rem' }}>\r\n    <div className=\"col-md-1\">\r\n      <img src={`/images/${img}`} className=\"img-fluid\" width=\"50px\" />\r\n    </div>\r\n    <div className=\"col-md-11\">\r\n      <HeadP>\r\n        <text style={{ fontSize: '1.2rem', fontWeight: '600' }}>\r\n          {pos},\r\n          <StyledLink href={website}>\r\n            <ExpName> {name} </ExpName>\r\n          </StyledLink>\r\n          <Bar>&#124;</Bar>\r\n        </text>\r\n        &nbsp;\r\n        <LineBreak />\r\n        <text style={{ color: '#677885', fontSize: '90%' }}>{time}</text>\r\n      </HeadP>\r\n      {Boolean(desc.length) && (\r\n        <ul>\r\n          {desc.map(e => (\r\n            <li style={{ fontWeight: '300' }}> {e} </li>\r\n          ))}\r\n          {links &&\r\n            Object.keys(links).map(k => <><a href={`${links[k]}`}> [ {k} ] </a> &nbsp;</>)}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  </div>\r\n)\r\n\r\nconst Work = () => (\r\n  <>\r\n    <SEO title=\"Work\" />\r\n    <div className=\"container-fluid h-100\">\r\n      <div className=\"row h-100\">\r\n        <Nav />\r\n\r\n        <Wrapper className=\"col-md-9 body-content\">\r\n          {Object.keys(WorkJSON).map(k => (\r\n            <>\r\n              <p\r\n                style={{\r\n                  fontSize: '2rem',\r\n                  fontWeight: '800',\r\n                  marginBottom: '0.6rem',\r\n                }}\r\n              >\r\n                {k}\r\n              </p>\r\n              {WorkJSON[k].map(e => (\r\n                <Experience {...e} />\r\n              ))}\r\n              <div style={{ margin: '3rem 0' }} />\r\n            </>\r\n          ))}\r\n        </Wrapper>\r\n      </div>\r\n    </div>\r\n  </>\r\n)\r\n\r\nexport default Work\r\n"],"sourceRoot":""}